import { IceManager, LocalAudioStream, LocalVideoStream, Member, PublicationImpl, SkyWayContext } from '@skyway-sdk/core';
import { SfuRestApiClient } from '@skyway-sdk/sfu-api-client';
import { ForwardingConfigure } from '../forwarding';
export declare class Sender {
    readonly publication: PublicationImpl<LocalVideoStream | LocalAudioStream>;
    private _iceManager;
    private readonly _api;
    private _bot;
    private _context;
    private readonly _device;
    private _transport;
    private _iceConnection?;
    private _producer?;
    forwardingId?: string;
    private _startingForwarding?;
    private _disposer;
    constructor(publication: PublicationImpl<LocalVideoStream | LocalAudioStream>, _iceManager: IceManager, _api: SfuRestApiClient, _bot: Member, _context: SkyWayContext);
    startForwarding(configure: ForwardingConfigure): Promise<string>;
    private _loadDevice;
    private _setupTransport;
    private _produce;
    private _setupEncoding;
    unproduce(): void;
    private _onConnect;
    private _onProduce;
    private _replaceTrack;
    getStats(): Promise<RTCStatsReport>;
    close(): void;
}
//# sourceMappingURL=sender.d.ts.map