"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoteRoomMemberImpl = void 0;
const common_1 = require("@skyway-sdk/common");
const __1 = require("..");
/**@internal */
class RemoteRoomMemberImpl extends __1.RoomMemberImpl {
    constructor(member, room) {
        super(member, room);
        this.side = 'remote';
        this.onPublicationSubscribed = new common_1.Event();
        this.onPublicationUnsubscribed = new common_1.Event();
        this.onSubscriptionChanged = new common_1.Event();
        this._remotePerson = this._member;
        this.subscribe = (publicationId) => new Promise((r, f) => {
            this._remotePerson.subscribe(publicationId).catch(f);
            this.onPublicationSubscribed
                .watch((e) => e.subscription.publication.id === publicationId)
                .then((e) => r(e))
                .catch(f);
        });
        this.unsubscribe = (subscriptionId) => new Promise((r, f) => {
            this._remotePerson.unsubscribe(subscriptionId).catch(f);
            this.onPublicationUnsubscribed
                .watch((e) => e.subscription.id === subscriptionId)
                .then(() => r())
                .catch(f);
        });
        room.onStreamSubscribed.add((e) => {
            if (e.subscription.subscriber._member.id ===
                member.id) {
                this.onPublicationSubscribed.emit(e);
                this.onSubscriptionChanged.emit();
            }
        });
        room.onStreamUnsubscribed.add((e) => {
            if (e.subscription.subscriber._member.id ===
                member.id) {
                this.onPublicationUnsubscribed.emit(e);
                this.onSubscriptionChanged.emit();
            }
        });
    }
}
exports.RemoteRoomMemberImpl = RemoteRoomMemberImpl;
//# sourceMappingURL=base.js.map