import { Event } from '@skyway-sdk/common';
import { Codec, ContentType, EncodingParameters, LocalStream, Publication, PublicationStatus } from '@skyway-sdk/core';
import { RoomMember, RoomMemberImpl } from '../member';
import { RoomImpl } from '../room/base';
import { RoomSubscription } from '../subscription';
export interface RoomPublication<T extends LocalStream = LocalStream> {
    readonly id: string;
    readonly contentType: ContentType;
    metadata?: string;
    readonly publisher: RoomMember;
    subscriptions: RoomSubscription[];
    readonly codecCapabilities: Codec[];
    encodings: EncodingParameters[];
    status: RoomPublicationStatus;
    /**
     * @description {japanese} publishしたstreamの実体。
     * ローカルで作られたPublicationでなければundefinedとなる
     */
    readonly stream?: T;
    readonly onUnpublished: Event<void>;
    readonly onSubscribed: Event<void>;
    readonly onUnsubscribed: Event<void>;
    readonly onSubscriptionChanged: Event<void>;
    readonly onMetadataUpdated: Event<string>;
    /**
     * @description {japanese} Metadataの更新
     */
    updateMetadata: (metadata: string) => Promise<void>;
    /**
     * @description {japanese} unpublishする
     */
    cancel: () => Promise<void>;
    /**
     * @description {japanese} Video|Audio Streamの場合、encoding設定を更新する
     */
    updateEncodings: (encodings: EncodingParameters[]) => void;
}
/**@internal */
export declare class RoomPublicationImpl<StreamType extends LocalStream = LocalStream> implements RoomPublication {
    _publication: Publication;
    private _room;
    readonly id: string;
    readonly contentType: ContentType;
    readonly codecCapabilities: Codec[];
    readonly publisher: RoomMemberImpl;
    private readonly _origin?;
    private readonly _events;
    readonly onUnpublished: Event<void>;
    readonly onSubscribed: Event<void>;
    readonly onUnsubscribed: Event<void>;
    readonly onSubscriptionChanged: Event<void>;
    readonly onMetadataUpdated: Event<string>;
    constructor(_publication: Publication, _room: RoomImpl);
    private _setEvents;
    get encodings(): EncodingParameters[];
    get stream(): StreamType;
    get subscriptions(): import("../subscription").RoomSubscriptionImpl<import("@skyway-sdk/core").RemoteStream>[];
    get status(): PublicationStatus;
    get metadata(): string | undefined;
    cancel(): Promise<void>;
    updateMetadata(metadata: string): Promise<void>;
    updateEncodings(encodings: EncodingParameters[]): void;
}
export declare type RoomPublicationStatus = PublicationStatus;
//# sourceMappingURL=index.d.ts.map