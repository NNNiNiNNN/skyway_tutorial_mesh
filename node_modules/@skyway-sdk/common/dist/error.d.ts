export declare class SkyWayError<PayloadType extends Record<string, any> = Record<string, any>> extends Error {
    private readonly id;
    type: ErrorType;
    message: string;
    payload?: PayloadType;
    constructor(init: Pick<SkyWayError<PayloadType>, 'type' | 'message' | 'payload'>, logging?: boolean);
    toJSON(): {
        type: ErrorType;
        message: string;
        payload: PayloadType | undefined;
    };
}
declare type ErrorType = 'notFound' | 'notReady' | 'duplicate' | 'internalError' | 'notImplemented' | 'invalidType' | 'invalidParameter' | 'forbidden' | 'parameterMissing' | 'backendNotConnected' | 'backendError' | 'timeout' | 'insufficientPermissions' | 'deleted';
export {};
//# sourceMappingURL=error.d.ts.map