"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = exports.logLevelTypes = void 0;
const event_1 = require("./event");
exports.logLevelTypes = ['error', 'warn', 'debug', 'disable'];
class Logger {
    constructor(_prefix) {
        this._prefix = _prefix;
    }
    debug(...msg) {
        this._log('debug', ...msg);
    }
    warn(...msg) {
        this._log('warn', ...msg);
    }
    error(...msg) {
        this._log('error', ...msg);
    }
    _log(level, ...msg) {
        const label = exports.logLevelTypes.indexOf(level);
        const target = exports.logLevelTypes.indexOf(Logger.level);
        const timestamp = new Date(Date.now() + 60 * 9 * 60000).toISOString() + '+JST';
        msg = [this._prefix, ...msg];
        if (target >= label) {
            switch (level) {
                case 'debug':
                    console.info(timestamp, level, ...msg);
                    break;
                case 'warn':
                    console.warn(timestamp, level, ...msg);
                    break;
                case 'error':
                    console.error(timestamp, level, ...msg);
                    break;
            }
        }
        Logger.onLog.emit({ id: Logger.id, timestamp, level, message: msg });
    }
}
exports.Logger = Logger;
Logger.level = 'error';
Logger.id = Math.random().toString().slice(2, 7);
Logger.onLog = new event_1.Event();
//# sourceMappingURL=logger.js.map