import model from '@skyway-sdk/model';
export declare type ChannelEvent = ChannelOpenedEvent | ChannelClosedEvent | ChannelMetadataUpdatedEvent | MembershipChangedEvent | MemberJoinedEvent | MemberLeftEvent | MemberMetadataUpdatedEvent | PublicationChangedEvent | StreamPublishedEvent | StreamUnpublishedEvent | PublicationMetadataUpdatedEvent | SubscriptionChangedEvent | StreamSubscribedEvent | StreamUnsubscribedEvent;
export declare type EventType = 'ChannelOpenedEvent' | 'ChannelClosedEvent' | 'ChannelMetadataUpdatedEvent' | 'MembershipChangedEvent' | 'MemberJoinedEvent' | 'MemberLeftEvent' | 'MemberMetadataUpdatedEvent' | 'PublicationChangedEvent' | 'StreamPublishedEvent' | 'StreamUnpublishedEvent' | 'PublicationMetadataUpdatedEvent' | 'SubscriptionChangedEvent' | 'StreamSubscribedEvent' | 'StreamUnsubscribedEvent';
export interface ChannelOpenedEvent {
}
export interface ChannelClosedEvent {
}
export interface ChannelMetadataUpdatedEvent {
    channel: {
        metadata: string;
    };
}
export interface MembershipChangedEvent {
}
export interface MemberJoinedEvent {
    member: model.Member;
}
export interface MemberLeftEvent {
    member: model.Member;
}
export interface MemberMetadataUpdatedEvent {
    member: model.Member;
}
export interface PublicationChangedEvent {
}
export interface StreamPublishedEvent {
    publication: model.Publication;
}
export interface StreamUnpublishedEvent {
    publication: model.Publication;
}
export interface PublicationMetadataUpdatedEvent {
    publication: model.Publication;
}
export interface SubscriptionChangedEvent {
}
export interface StreamSubscribedEvent {
    subscription: model.Subscription;
}
export interface StreamUnsubscribedEvent {
    subscription: model.Subscription;
}
//# sourceMappingURL=event.d.ts.map