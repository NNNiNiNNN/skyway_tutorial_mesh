"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionImpl = void 0;
const common_1 = require("@skyway-sdk/common");
const common_2 = require("@skyway-sdk/common");
const config_1 = require("../config");
__exportStar(require("./factory"), exports);
const log = new common_1.Logger('packages/core/src/subscription/index.ts');
/**@internal */
class SubscriptionImpl {
    constructor(args) {
        this._status = 'created';
        this.onCanceled = new common_2.Event();
        this.onStreamAttached = new common_2.Event();
        this._channel = args.channel;
        this.id = args.id;
        this.contentType = args.contentType;
        this.subscriberId = args.subscriberId;
        this.publicationId = args.publicationId;
        this._status = 'subscribed';
        log.debug('subscription spawned', this.toJSON());
    }
    get subscriber() {
        return this._channel._getMember(this.subscriberId);
    }
    get publication() {
        return this._channel._getPublication(this.publicationId);
    }
    get status() {
        return this._status;
    }
    set stream(stream) {
        this._stream = stream;
        if (stream) {
            this.onStreamAttached.emit();
        }
    }
    get stream() {
        return this._stream;
    }
    toJSON() {
        return {
            id: this.id,
            contentType: this.contentType,
            subscriberId: this.subscriberId,
            publication: this.publication,
            channelId: this._channel.id,
        };
    }
    /**@private */
    _canceled() {
        this.stream = undefined;
        this._status = 'canceled';
        this.onCanceled.emit();
    }
    cancel() {
        return __awaiter(this, void 0, void 0, function* () {
            this._channel._unsubscribe(this.id).catch((e) => {
                throw e;
            });
            yield this.onCanceled.asPromise(config_1.SkyWayConfig.get.rtcApi.timeout);
        });
    }
}
exports.SubscriptionImpl = SubscriptionImpl;
//# sourceMappingURL=index.js.map